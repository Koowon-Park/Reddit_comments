# Knowledge Graphs

Knowledge Graphs serve multiple purposes

## Neo4j

Here is a basic representation of our knowledge graph in Neo4j. Where authors in blue, comments in pink, theme in green, scores in orange, and sentiment in red.

![](../../images/graph.png)

Increasing the complexity of the graph can help to understand the relationships between the different nodes.

![](../../images/clipboard-583397259.png)

Increasing it even more

![](../../images/clipboard-747420762.png)

## Gephi

As the complexity increase neo4j becomes really non efficient so we can use Gephi to visualize the graph.

### OpenOrd

Openord is a force-directed layout algorithm that is based on stress minimization. It is a good choice for large graphs.

![](../../images/gephi1_openord.png) 

We can ovserve here that the graph is really complex and hard to interpret.

![](../../images/clipboard-2332198561.png)

Adding the scores nodes in blue did not help to understand the graph.

### yifanHu

YifanHu is a force-directed layout algorithm that is based on the physical model of the system.

### Themes

Using YifanHu on gephi we can observe here an interesting representation of the prevalance of different theme in our dataset.

![](../../images/clipboard-927049404.png){width="224"}

We observe here that theme 9 which is about 'Sports, Teams, and Player Discussions' is the most prevalent for example.

![](../../images/clipboard-2630725974.png)

### Sentiment

adding sentiment in green (positive) and red (negative) complexifies the graph but can be useful to understand the sentiment of the different themes. We observe for example that theme 9 as a lot of 'red' which means that it is mostly negative.compares to other themes.

![](../../images/clipboard-3037199124.png)
```{r}
#check if theme 9 as indeed more negative sentiment
table_data <- df.final %>% filter(theme == 9) %>% group_by(sentiment_category) %>% summarise(n = n())

# Display the table using kable
kable(table_data, col.names = c("Sentiment Category", "Count"), caption = "Sentiment Category Counts for Theme 9")
```
Which is indeed verified.

### Scores

the same can be done with score in shades of blue but it becomes a bit more complex to interpret.

![](../../images/clipboard-688774298.png)

## Similarities

### Author-Theme

They can also for example be used to understand similarities.

It was tried here to identifies connection through theme between authors with a similaritie score found through an THEME_AUTHORS relationship on NEO4J.

![](../../images/clipboard-3780268986.png)

We observe that the small dots (authors) on the left side have a lots of connection through different theme nodes.

![](../../images/clipboard-2533163853.png)

For example here we observe the relationship of authors based on theme 1, which correspond to 'Rules, Information, and Wiki Communitie' finds authors similarities between 'Automoderator', 'Autowikibot', 'totes_meta_bot', and other it seems like non bot authors like 'timewaitsforsome', ect. It seems logical that those authors are connected through the same theme.

Now if we isolate theme 17 which is about 'Politics, Science, and Star Wars'.

![](../../images/clipboard-1197459568.png)

We observe that still Automoderator and autowikibot are part of it as they have a relation in all theme which is logical. But we also observe now techrush andd beefat99 and tweetposter for example.

We can continue for other themes but you get the point that I want to demonstrate that we can play with those knowledge graph to get insights from it.
